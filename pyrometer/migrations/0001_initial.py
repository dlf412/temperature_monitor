# Generated by Django 3.0.4 on 2020-03-11 15:19

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organiz', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='修改时间')),
                ('uuid', models.CharField(help_text='设备唯一识别码', max_length=40, unique=True, verbose_name='设备唯一识别码')),
                ('is_online', models.BooleanField(default=False, help_text='true:在线, false:不在线', verbose_name='是否在线')),
                ('last_online_time', models.DateTimeField(default=None, help_text='最后一次在线时间', verbose_name='最后一次在线时间')),
                ('total_online_time', models.IntegerField(default=0, help_text='总在线时间', verbose_name='总在线时间(秒)')),
                ('channel', models.ForeignKey(help_text='关联通道', null=True, on_delete=django.db.models.deletion.SET_NULL, to='organiz.Channel', verbose_name='关联通道')),
                ('department', models.ForeignKey(help_text='关联部门', null=True, on_delete=django.db.models.deletion.SET_NULL, to='organiz.Department', verbose_name='关联部门')),
            ],
            options={
                'verbose_name': '设备',
                'verbose_name_plural': '设备',
            },
        ),
        migrations.CreateModel(
            name='RealData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='修改时间')),
                ('temperature', models.SmallIntegerField(default=0, help_text='实时温度*100', verbose_name='实时温度')),
                ('visitors', models.PositiveSmallIntegerField(default=0, help_text='当然人流量', verbose_name='当日人流量')),
                ('people_temperature', models.PositiveSmallIntegerField(default=0, help_text='当前通过的人体温', verbose_name='当前通过的人体温')),
                ('device_rtc_time', models.PositiveIntegerField(default=0, help_text='设备RTC时间', verbose_name='设备RTC时间')),
                ('device_control_time', models.PositiveIntegerField(default=0, help_text='设备控制器时间', verbose_name='设备控制器时间')),
                ('device', models.ForeignKey(help_text='设备', on_delete=django.db.models.deletion.PROTECT, to='pyrometer.Device', verbose_name='设备')),
            ],
            options={
                'verbose_name': '设备实时数据',
                'verbose_name_plural': '设备实时数据',
            },
        ),
        migrations.CreateModel(
            name='OperationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='修改时间')),
                ('command', models.CharField(help_text='操作指令', max_length=60, verbose_name='操作指令')),
                ('data', models.CharField(help_text='指令数据', max_length=200, verbose_name='指令数据')),
                ('device', models.ForeignKey(help_text='设备', on_delete=django.db.models.deletion.CASCADE, to='pyrometer.Device', verbose_name='设备')),
                ('user', models.ForeignKey(default=None, help_text='操作人', null=True, on_delete=django.db.models.deletion.SET_NULL, to='organiz.Admin', verbose_name='操作人')),
            ],
            options={
                'verbose_name': '设备操作日志表',
                'verbose_name_plural': '设备操作日志表',
            },
        ),
        migrations.CreateModel(
            name='EventSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='修改时间')),
                ('oldest_no', models.PositiveIntegerField(help_text='最早记录编号', verbose_name='最早记录编号')),
                ('newest_no', models.PositiveIntegerField(help_text='最新记录编号', verbose_name='最新纪录编号')),
                ('max_record', models.PositiveSmallIntegerField(help_text='最大记录数', verbose_name='最大记录数')),
                ('sync_no', models.PositiveIntegerField(default=0, help_text='已同步的最新编号', verbose_name='已经同步的最新编号')),
                ('device', models.OneToOneField(help_text='设备', on_delete=django.db.models.deletion.PROTECT, to='pyrometer.Device', verbose_name='设备')),
            ],
            options={
                'verbose_name': '设备报警概要',
                'verbose_name_plural': '设备报警概要',
            },
        ),
        migrations.CreateModel(
            name='Configure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='修改时间')),
                ('low_threshold', models.PositiveSmallIntegerField(default=3200, help_text='有人通过的最低温', verbose_name='有人通过的最低温')),
                ('normal_threshold', models.PositiveSmallIntegerField(default=3400, help_text='正常的最低温度', verbose_name='正常的最低温度')),
                ('high_threshold', models.PositiveSmallIntegerField(default=3720, help_text='发烧的最低温度', verbose_name='发烧的最低温度')),
                ('delay_after_warn', models.PositiveSmallIntegerField(default=0, help_text='报警后，多久自动关闭，单位：秒', verbose_name='报警后多久自动关闭')),
                ('auto_close', models.PositiveSmallIntegerField(default=0, help_text='报警后，检测到下一人时，是否自动关闭。1检测到下一人自动关闭；0不自动关闭', verbose_name='警后，检测到下一人时，是否自动关闭。1检测到下一人自动关闭；0不自动关闭')),
                ('reverse', models.PositiveSmallIntegerField(default=0, help_text='保留', verbose_name='保留')),
                ('relay1', models.PositiveSmallIntegerField(default=0, help_text='继电器1动作类型：0电平，1脉冲', verbose_name='继电器1动作类型：0电平，1脉冲')),
                ('relay1_time', models.PositiveSmallIntegerField(default=0, help_text='继电器1动作时长，单位100ms，最大6553.5秒', verbose_name='继电器1动作时长，单位100ms，最大6553.5秒')),
                ('relay1_interval', models.PositiveSmallIntegerField(default=0, help_text='继电器1间歇时长，单位100ms，最大6553.5秒', verbose_name='继电器1间歇时长，单位100ms，最大6553.5秒')),
                ('relay2', models.PositiveSmallIntegerField(default=0, help_text='继电器2动作类型：0电平，1脉冲', verbose_name='继电器2动作类型：0电平，1脉冲')),
                ('relay2_time', models.PositiveSmallIntegerField(default=0, help_text='继电器2动作时长，单位100ms，最大6553.5秒', verbose_name='继电器2动作时长，单位100ms，最大6553.5秒')),
                ('relay2_interval', models.PositiveSmallIntegerField(default=0, help_text='继电器2间歇时长，单位100ms，最大6553.5秒', verbose_name='继电器2间歇时长，单位100ms，最大6553.5秒')),
                ('device_time', models.PositiveIntegerField(default=0, help_text='2000年到当前时间的秒数', verbose_name='设备时间')),
                ('device', models.ForeignKey(help_text='设备', on_delete=django.db.models.deletion.CASCADE, to='pyrometer.Device', verbose_name='设备')),
            ],
            options={
                'verbose_name': '设备参数配置',
                'verbose_name_plural': '设备参数配置',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='修改时间')),
                ('no', models.PositiveIntegerField(help_text='编号', verbose_name='报警事件编号')),
                ('type', models.SmallIntegerField(help_text='报警事件类型', verbose_name='报警事件类型')),
                ('visitors', models.SmallIntegerField(help_text='当日人流量', verbose_name='当日人流量')),
                ('temperature', models.SmallIntegerField(default=0, help_text='温度*100', verbose_name='当前温度')),
                ('warn_temperature', models.SmallIntegerField(default=0, help_text='温度*100', verbose_name='报警设置温度')),
                ('warn_time', models.PositiveIntegerField(help_text='2000年到当前秒数', verbose_name='报警时间')),
                ('device', models.ForeignKey(help_text='设备', on_delete=django.db.models.deletion.PROTECT, to='pyrometer.Device', verbose_name='设备')),
            ],
            options={
                'verbose_name': '设备报警事件',
                'verbose_name_plural': '设备报警事件',
                'unique_together': {('no', 'device')},
            },
        ),
    ]
